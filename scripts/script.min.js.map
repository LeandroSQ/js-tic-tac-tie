{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@babel/runtime/helpers/defineProperty.js","script.min.js","node_modules/@babel/runtime/helpers/interopRequireDefault.js","src/scripts/constants.js","src/scripts/controller/ai.js","src/scripts/controller/mouse.js","src/scripts/controller/theme.js","src/scripts/enum/game-state.js","src/scripts/enum/sound-effect.js","src/scripts/main.js","src/scripts/model/board.js","src/scripts/state/base.js","src/scripts/state/menu.js","src/scripts/state/player-vs-ai.js","src/scripts/state/player-vs-player.js","src/scripts/state/player-won.js","src/scripts/state/tie.js","src/scripts/util/audio-loader.js","src/scripts/util/extensions.js","src/scripts/util/font-loader.js","src/scripts/util/image-loader.js","src/scripts/widget/button.js","src/scripts/widget/density-canvas.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","default","TIE","TARGET_FRAMETIME","TARGET_FPS","FONT_FAMILY","CELL_X","CELL_O","CELL_EMPTY","BORDER_RADIUS","_classPrivateMethodInitSpec","privateSet","privateCollection","has","TypeError","_checkPrivateRedeclaration","add","_classPrivateMethodGet","receiver","fn","_getEmptyCells2","matrix","list","y","x","_constants","push","Node","_cloneMatrix2","copy","row","cell","_checkRules2","b","_board","Board","cells","result","checkRules","winner","_minimax2","depth","isMaximizing","this","_checkRules","score","move","availableEmptyCells","_getEmptyCells","Number","bestNode","node","_minimax","AIController","constructor","WeakSet","_cloneMatrix","main","maxDepth","evaluate","board","_attachHooks2","element","canvas","addEventListener","_onMouseClick","_onMouseClick2","bind","_onMouseMove","_onMouseMove2","event","position","offsetX","offsetY","isClicking","invalidate","_interopRequireDefault","MouseController","_defineProperty2","_attachHooks","update","_loadVariables2","variables","console","groupCollapsed","style","getComputedStyle","document","body","variable","getPropertyValue","name","toString","toCamelCase","log","window","Color","isColorLight","groupEnd","_observeChanges2","matchMedia","_loadVariables","onThemeChange","ThemeController","_observeChanges","GameState","MENU","PLAYER_VS_PLAYER","PLAYER_VS_AI","PLAYER_WON","SoundEffect","GAME_START","BUTTON_HOVER","CELL_PLACE","PEN_STROKE","addLoadEventListener","_onLoad","_onLoad2","_onResize","_onResize2","addVisibilityChangeEventListener","onVisibilityChange","async","attachToElement","getElementById","_fontLoader","FontLoader","load","ctx","Promise","all","stateMenu","statePlayerVsIA","statePlayerVsPlayer","statePlayerWon","stateTie","_requestNextFrame","_requestNextFrame2","error","alert","viewport","width","innerWidth","height","innerHeight","layout","setSize","_onFrame2","paused","startFrameTime","performance","now","deltaTime","lastFrameTime","frameCounter","fpsTimer","fps","currentState","currentGameState","isDirty","clear","render","mouse","elapsed","remaining","Math","clamp","setTimeout","_onFrame","Main","_mouse","_theme","_gameState","_menu","_playerVsAi","_playerVsPlayer","_playerWon","_tie","_imageLoader","_densityCanvas","_state","GameStateMenu","GameStatePlayerVsPlayer","GameStatePlayerVsIA","GameStatePlayerWon","GameStateTie","DensityCanvas","context","turn","random","theme","nextTurn","imageSize","cellSize","imageO","ImageLoader","tint","playerO","imageX","playerX","isVisible","postInvalidate","state","setup","instance","_checkHorizontalLines2","_createEmptyMatrix","_createEmptyMatrix2","rows","columns","start","end","_checkVerticalLines2","_checkTopLeftDiagonalLine2","_checkTopRightDiagonalLine2","_checkTie2","isBoardFilled","_renderCells2","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","image","drawBufferTo","resetShadow","_renderGrid2","strokeStyle","boardBorder","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","arguments","undefined","tmp","tmpRow","j","_checkHorizontalLines","_checkVerticalLines","_checkTopLeftDiagonalLine","_checkTopRightDiagonalLine","_checkTie","_renderCells","_renderGrid","reset","padding","drawRatio","amountOfCellsPerAxis","min","ceil","GameStateBase","_onGameStateChange2","audioGameStart","play","cursor","globalAlpha","_updateRandomMoves2","randomMovementTimer","intervalBetweenRandomMoves","_randomizeMoves","_randomizeMoves2","_updateTextShake2","shakeTimer","intervalBetweenShakes","progress","abs","shakeOffsetX","pow","_updateUI2","buttonPlayerVsPlayer","buttonPlayerVsAI","_updateSplash2","alreadyTapped","alphaTimer","foundPosition","randomIntRange","_renderSplash2","save","translate","scale","dimBackground","fillStyle","foreground","font","fillTextCentered","restore","_renderMenuOptions2","boardBackground","_soundEffect","_audioLoader","_button","_base","_onGameStateChange","_updateRandomMoves","_updateTextShake","_updateUI","_updateSplash","_renderSplash","_renderMenuOptions","super","alpha","alphaAnimationDuration","AudioLoader","volume","buttonWidth","buttonY","Button","text","onClick","buttonHeight","filter","roundRect","fill","_updatePlayer2","mX","mY","isMouseOverEmptyCell","col","floor","_onCellPlaced","_onCellPlaced2","_updateAI2","ai","audioCellPlace","_ai","_updatePlayer","_updateAI","isPlayerTurn","isAiTurn","audioGameWon","audioPenStroke","animationTimer","animationDuration","animationDone","animationProgress","verticalPadding","horizontalPadding","sX","sY","lineCap","lineJoin","_classStaticPrivateMethodGet","classConstructor","method","_classCheckPrivateStaticAccess","_resolveAudioPath","soundFX","location","href","indexOf","pathname","substring","lastIndexOf","static","_ref","resolve","reject","path","audio","Audio","preload","once","onerror","max","lerp","current","target","speed","difference","randomRange","Array","prototype","handler","timeout","fired","_func","prefixes","isDocumentHidden","map","reduce","prefix","onvisibilitychange","CanvasRenderingContext2D","hasOwnProperty","radius","isArray","tl","tr","br","bl","quadraticCurveTo","String","replace","toUpperCase","trim","hex","color","slice","g","sqrt","hint","buffer","HTMLCanvasElement","screenshot","filename","createElement","download","toDataURL","visibility","display","appendChild","click","removeChild","textAlign","textBaseline","fillText","promises","size","fonts","check","_loadImage","identifier","img","src","onload","options","process","aspectRatio","drawImage","globalCompositeOperation","fillRect","channel","audioHover","isHovered","wasHoveredPreviously","isWithinBounds","getContext","virtualWidth","virtualHeight","enableHighDPI","fullscreen","onfullscreenerror","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","devicePixelRatio","minWidth","minHeight","clearRect"],"mappings":"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","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;",null,"function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export const BORDER_RADIUS = 10;\n\nexport const CELL_EMPTY = null;\nexport const CELL_X = 1;\nexport const CELL_O = 2;\nexport const TIE = 3;\n\nexport const TARGET_FPS = 24;\nexport const TARGET_FRAMETIME = 1000 / TARGET_FPS;\n\nexport const FONT_FAMILY = \"Poiret One\";","import { CELL_EMPTY, CELL_X, CELL_O, TIE } from \"../constants\";\nimport { Board } from \"../model/board.js\";\n\n/**\n * @typedef {import(\"../model/Main.js\").Main} Main\n * @typedef {import(\"../model/board.js\").Board} Board\n * @typedef {Array<Array<number>>} Matrix\n */\n\nclass Node {\n\n\tconstructor(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n}\n\nexport class AIController {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tthis.main = main;\n\t\tthis.maxDepth = 3;\n\t}\n\n\t/**\n\t * @param {Matrix} matrix\n\t * @return {Array<Node>}\n\t */\n\t#getEmptyCells(matrix) {\n\t\tconst list = [];\n\n\t\tfor (let y = 0; y < matrix.length; y++) {\n\t\t\tfor (let x = 0; x < matrix[y].length; x++) {\n\t\t\t\tconst cell = matrix[y][x];\n\n\t\t\t\tif (cell === CELL_EMPTY) list.push(new Node(x, y));\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * @param {Matrix} matrix\n\t * @return {Matrix}\n\t */\n\t#cloneMatrix(matrix) {\n\t\tconst copy = [];\n\n\t\tfor (let y = 0; y < matrix.length; y++) {\n\t\t\tconst row = [];\n\t\t\tfor (let x = 0; x < matrix[y].length; x++) {\n\t\t\t\tconst cell = matrix[y][x];\n\t\t\t\trow.push(cell);\n\t\t\t}\n\t\t\tcopy.push(row);\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * @param {Matrix} matrix\n\t * @return {null|CELL_O|CELL_X|TIE}\n\t */\n\t#checkRules(matrix) {\n\t\t// Dummy board holder\n\t\tconst b = new Board(null);\n\t\tb.cells = matrix;\n\t\tconst result = b.checkRules();\n\n\t\t// Simplify return\n\t\tif (result === TIE) return TIE;\n\t\telse if (result) return result.winner;\n\t\telse return null;\n\t}\n\n\t/**\n\t * @param {Matrix} matrix\n\t * @param {Node} node\n\t * @param {number} depth\n\t * @param {boolean} isMaximizing\n\t *\n\t * @return {{ score: number, move: [Node] }}\n\t */\n\t// eslint-disable-next-line complexity, max-statements\n\t#minimax(matrix, depth, isMaximizing) {\n\t\t// Check for terminal nodes\n\t\tconst result = this.#checkRules(matrix);\n\t\tif (result === CELL_O) {\n\t\t\treturn { score: 10, move: null };\n\t\t} else if (result === CELL_X) {\n\t\t\treturn { score: -10, move: null };\n\t\t} else if (result === TIE) {\n\t\t\treturn { score: 0, move: null };\n\t\t} else if (depth === 0) {\n\t\t\treturn { score: 0, move: null };\n\t\t}\n\n\t\t// Check for available moves\n\t\tconst availableEmptyCells = this.#getEmptyCells(matrix);\n\n\t\tif (isMaximizing) {\n\t\t\t// If aiming to maximize AI Score\n\t\t\tlet value = Number.NEGATIVE_INFINITY;\n\t\t\tlet bestNode = null;\n\t\t\tfor (const node of availableEmptyCells) {\n\t\t\t\t// Pretend to make move and evaluate score\n\t\t\t\tmatrix[node.y][node.x] = CELL_O;\n\t\t\t\tconst score = this.#minimax(matrix, depth - 1, false).score;\n\t\t\t\tmatrix[node.y][node.x] = CELL_EMPTY;\n\n\t\t\t\t// If score is better than previous, store it as new best score\n\t\t\t\tif (score > value) {\n\t\t\t\t\tvalue = score;\n\t\t\t\t\tbestNode = node;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Return the best possible move from this iteration\n\t\t\treturn { score: value, move: bestNode };\n\t\t} else {\n\t\t\t// Otherwise, if aiming to minimize player score\n\t\t\tlet value = Number.POSITIVE_INFINITY;\n\t\t\tlet bestNode = null;\n\t\t\tfor (const node of availableEmptyCells) {\n\t\t\t\t// Pretend to make move and evaluate score\n\t\t\t\tmatrix[node.y][node.x] = CELL_X;\n\t\t\t\tconst score = this.#minimax(matrix, depth - 1, true).score;\n\t\t\t\tmatrix[node.y][node.x] = CELL_EMPTY;\n\n\t\t\t\t// If score is better than previous, store it as new best score\n\t\t\t\tif (score < value) {\n\t\t\t\t\tvalue = score;\n\t\t\t\t\tbestNode = node;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Return the best possible move from this iteration\n\t\t\treturn { score: value, move: bestNode };\n\t\t}\n\t}\n\n\tevaluate() {\n\t\t// Clone the board cell matrix\n\t\tconst matrix = this.#cloneMatrix(this.main.board.cells);\n\t\t// Evaluate possible moves\n\t\tconst move = this.#minimax(matrix, 6, true);\n\n\t\tif (DEBUG) {\n\t\t\tconsole.group(\"AI\");\n\t\t\tconsole.log(\"Initial board: \");\n\t\t\tconsole.matrix(matrix);\n\t\t\tconsole.log(\"Best possible move is:\", move);\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\treturn move;\n\t}\n\n}\n","import { Main } from \"../main\";\n\nexport class MouseController {\n\n\tposition = { x: 0, y: 0 };\n\n\tisClicking = false;\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tthis.main = main;\n\t\tthis.#attachHooks();\n\t}\n\n\t#attachHooks() {\n\t\tconst element = this.main.canvas.canvas;\n\n\t\telement.addEventListener(\"click\", this.#onMouseClick.bind(this));\n\t\telement.addEventListener(\"mousemove\", this.#onMouseMove.bind(this));\n\t}\n\n\t/** @param {MouseEvent} event */\n\t#onMouseClick(event) {\n\t\tthis.position = { x: event.offsetX, y: event.offsetY };\n\n\t\tthis.isClicking = true;\n\n\t\tthis.main.invalidate();\n\n\t\t// HACK: Sometimes the visibility change event is not called, so we'll reset it by hand whenever the mouse interacts with the page\n\t\t// if (this.main.paused) this.main.onVisibilityChange(true);\n\t}\n\n\t/** @param {MouseEvent} event */\n\t#onMouseMove(event) {\n\t\tthis.position = { x: event.offsetX, y: event.offsetY };\n\n\t\tthis.main.invalidate();\n\n\t\t// HACK: Sometimes the visibility change event is not called, so we'll reset it by hand whenever the mouse interacts with the page\n\t\t// if (this.main.paused) this.main.onVisibilityChange(true);\n\t}\n\n\tupdate() {\n\t\tthis.isClicking = false;\n\t}\n\n}","import { Main } from \"./../main.js\";\n\n/**\n * @property {string} background Represents a CSS variable\n * @property {string} boardBackground Represents a CSS variable\n * @property {string} boardBorder Represents a CSS variable\n * @property {string} playerX Represents a CSS variable\n * @property {string} playerO Represents a CSS variable\n * @public\n */\nexport class ThemeController {\n\n\t/** @type {string} Represents a CSS variable */\n\tbackground\n\n\t/** @type {string} Represents a CSS variable */\n\tforeground\n\n\t/** @type {string} Represents a CSS variable */\n\tdimBackground\n\n\t/** @type {string} Represents a CSS variable */\n\tboardBackground\n\n\t/** @type {string} Represents a CSS variable */\n\tboardBorder\n\n\t/** @type {string} Represents a CSS variable */\n\tplayerX\n\n\t/** @type {string} Represents a CSS variable */\n\tplayerO\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tthis.main = main;\n\n\t\tthis.#loadVariables();\n\t\tthis.#observeChanges();\n\t}\n\n\t#loadVariables() {\n\t\t// Define the CSS variables to keep track of\n\t\tconst variables = [\"--background\", \"--foreground\", \"--dim-background\", \"--board-background\", \"--board-border\", \"--player-x\", \"--player-o\"];\n\n\t\tconsole.groupCollapsed(\"Loading theme variables\");\n\n\t\t// Iterate trough variables\n\t\tconst style = getComputedStyle(document.body);\n\t\tfor (const variable of variables) {\n\t\t\t// Get the variable value\n\t\t\tconst value = style.getPropertyValue(variable);\n\t\t\tconst name = variable.toString().toCamelCase();\n\n\t\t\t// Set the variable on this instance\n\t\t\tthis[name] = value;\n\n\t\t\t// Print out the variable\n\t\t\tconsole.log(`%c${name}`, `color: ${window.Color.isColorLight(value) ? \"#212121\" : \"#eee\"}; background-color: ${value}`);\n\t\t}\n\n\t\tconsole.groupEnd();\n\t}\n\n\t#observeChanges() {\n\t\tconst darkThemeMediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\t\tdarkThemeMediaQuery.addEventListener(\"change\", () => {\n\t\t\tthis.#loadVariables();\n\t\t\tthis.main.onThemeChange();\n\t\t});\n\t}\n\n}","export const GameState = {\n\tMENU: 0,\n\tPLAYER_VS_PLAYER: 1,\n\tPLAYER_VS_AI: 2,\n\tTIE: 3,\n\tPLAYER_WON: 4\n};","export const SoundEffect = {\n\tGAME_START: \"game_start.wav\",\n\tBUTTON_HOVER: \"button_hover.wav\",\n\tCELL_PLACE: \"cel_place.wav\",\n\tPEN_STROKE: \"pen_stroke.wav\",\n};","/* eslint-disable max-statements */\nimport { CELL_O, CELL_X, TARGET_FRAMETIME, TIE } from \"./constants.js\";\nimport { MouseController } from \"./controller/mouse.js\";\nimport { ThemeController } from \"./controller/theme.js\";\nimport { GameState } from \"./enum/game-state.js\";\nimport { Board } from \"./model/board.js\";\nimport { GameStateMenu } from \"./state/menu.js\";\nimport { GameStatePlayerVsIA } from \"./state/player-vs-ai.js\";\nimport { GameStatePlayerVsPlayer } from \"./state/player-vs-player.js\";\nimport { GameStatePlayerWon } from \"./state/player-won.js\";\nimport { GameStateTie } from \"./state/tie.js\";\nimport \"./util/extensions.js\";\nimport { FontLoader } from \"./util/font-loader.js\";\nimport { ImageLoader } from \"./util/image-loader.js\";\nimport { DensityCanvas } from \"./widget/density-canvas.js\";\n\n/**\n * @typedef {import(\"./state/base.js\").GameStateBase} GameStateBase\n */\n\nexport class Main {\n\n\tconstructor() {\n\t\t// Game\n\t\tthis._state = GameState.MENU;\n\t\tthis.stateMenu = new GameStateMenu(this);\n\t\tthis.statePlayerVsPlayer = new GameStatePlayerVsPlayer(this);\n\t\tthis.statePlayerVsIA = new GameStatePlayerVsIA(this);\n\t\tthis.statePlayerWon = new GameStatePlayerWon(this);\n\t\tthis.stateTie = new GameStateTie(this);\n\t\tthis.paused = false;\n\n\t\t// Canvas\n\t\tthis.canvas = new DensityCanvas();\n\t\tthis.ctx = this.canvas.context;\n\t\tthis.isDirty = true;\n\n\t\t// Board\n\t\tthis.board = new Board(this);\n\t\tthis.turn = Math.random() <= 0.5 ? CELL_O : CELL_X;\n\n\t\t/** @type { winner: number, start: { x: number, y: number }, end: { x: number, y: number } } */\n\t\tthis.result = null;\n\n\t\t// Theme\n\t\tthis.theme = new ThemeController(this);\n\n\t\t// Input\n\t\tthis.mouse = new MouseController(this);\n\n\t\t// FPS tracking variables\n\t\tthis.startFrameTime = performance.now();\n\t\tthis.lastFrameTime = performance.now();\n\t\tthis.frameCounter = 0;\n\t\tthis.fpsTimer = 0;\n\t\tthis.fps = 0;\n\n\t\tthis.#attachHooks();\n\t}\n\n\tnextTurn() {\n\t\tif (this.turn == CELL_O) {\n\t\t\tthis.turn = CELL_X;\n\t\t} else {\n\t\t\tthis.turn = CELL_O;\n\t\t}\n\t}\n\n\t#attachHooks() {\n\t\twindow.addLoadEventListener(this.#onLoad.bind(this));\n\t\twindow.addEventListener(\"resize\", this.#onResize.bind(this));\n\t\twindow.addVisibilityChangeEventListener(this.onVisibilityChange.bind(this));\n\t}\n\n\t// #region Event listeners\n\tasync #onLoad() {\n\t\ttry {\n\t\t\t// Attach the canvas element to the document body\n\t\t\tthis.canvas.attachToElement(document.getElementById(\"container\"));\n\n\t\t\t// Force layout\n\t\t\tthis.#onResize();\n\n\t\t\t// Force theme apply\n\t\t\tawait this.onThemeChange();\n\n\t\t\t// Loads font\n\t\t\tawait FontLoader.load(this.ctx);\n\n\t\t\t// Loads game states\n\t\t\tawait Promise.all([\n\t\t\t\tthis.stateMenu.load(),\n\t\t\t\tthis.statePlayerVsIA.load(),\n\t\t\t\tthis.statePlayerVsPlayer.load(),\n\t\t\t\tthis.statePlayerWon.load(),\n\t\t\t\tthis.stateTie.load()\n\t\t\t]);\n\n\t\t\t// Request first frame\n\t\t\tthis.#requestNextFrame();\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\talert(\"Some error ocurred!\");\n\t\t}\n\t}\n\n\tasync onThemeChange() {\n\t\t// Load images\n\t\tconst padding = 1.5;\n\t\tconst imageSize = this.board.cellSize / padding;\n\t\tthis.imageO = await ImageLoader.load(\"ic_o.svg\", { tint: this.theme.playerO, height: imageSize });\n\t\tthis.imageX = await ImageLoader.load(\"ic_x.svg\", { tint: this.theme.playerX, height: imageSize });\n\n\t\t// Invalidate canvas\n\t\tthis.isDirty = true;\n\t}\n\n\tasync #onResize() {\n\t\tconst viewport = {\n\t\t\twidth: window.innerWidth,\n\t\t\theight: window.innerHeight\n\t\t};\n\n\t\tthis.board.layout(viewport);\n\t\tthis.canvas.setSize(this.board);\n\n\t\t// Force theme apply\n\t\tawait this.onThemeChange();\n\t}\n\n\tonVisibilityChange(isVisible) {\n\t\tconsole.log(isVisible);\n\n\t\tif (isVisible) {\n\t\t\t// The page is now visible, reset fps variables to prevent over-updating\n\t\t\tthis.paused = false;\n\t\t\tthis.lastFrameTime = performance.now();\n\t\t\tthis.startFrameTime = performance.now();\n\t\t\tthis.frameCounter = 0;\n\t\t\tthis.fpsTimer = 0;\n\t\t\tthis.fps = 0;\n\n\t\t\t// Request the next frame\n\t\t\tthis.#requestNextFrame();\n\t\t} else {\n\t\t\t// Ignore all frames until the page is visible again\n\t\t\tthis.paused = true;\n\t\t}\n\t}\n\n\t#onFrame() {\n\t\t// Ignore frames when the page is not visible\n\t\tif (this.paused) return;\n\n\t\t// Calculate the delta time\n\t\tthis.startFrameTime = performance.now();\n\t\tconst deltaTime = (this.startFrameTime - this.lastFrameTime) / 1000;\n\n\t\t// Handle fps counter\n\t\tthis.frameCounter++;\n\t\tthis.fpsTimer += deltaTime;\n\t\tif (this.fpsTimer > 1) {\n\t\t\tthis.fpsTimer -= 1;\n\t\t\tthis.fps = this.frameCounter;\n\t\t\tthis.frameCounter = 0;\n\t\t}\n\n\t\t// Fetch current game state instance\n\t\tconst currentState = this.currentGameState;\n\n\t\t// Update and render current game state\n\t\tcurrentState.update(deltaTime);\n\t\tif (this.isDirty && currentState === this.currentGameState) {\n\t\t\t// Clear canvas\n\t\t\tthis.canvas.clear();\n\n\t\t\t// Render current state\n\t\t\tcurrentState.render(this.ctx);\n\t\t\tthis.isDirty = false;\n\t\t}\n\n\t\t// Update mouse controller\n\t\tthis.mouse.update();\n\n\t\t// Request the next frame\n\t\tthis.#requestNextFrame();\n\t}\n\t// #endregion\n\n\t#requestNextFrame() {\n\t\t// Calculate the time since the last frame\n\t\tconst elapsed = this.lastFrameTime - this.startFrameTime;\n\t\tconst remaining = Math.clamp(TARGET_FRAMETIME - elapsed, 0, TARGET_FRAMETIME);\n\n\t\tsetTimeout(this.#onFrame.bind(this), remaining);\n\t\tthis.lastFrameTime = performance.now();\n\t}\n\n\tinvalidate() {\n\t\tthis.isDirty = true;\n\t}\n\n\tpostInvalidate() {\n\t\t// Hack: schedules after this frame to make the canvas dirty\n\t\tsetTimeout(this.invalidate.bind(this), 0);\n\t}\n\n\t/**\n\t * @return {GameStateBase}\n\t */\n\tget currentGameState() {\n\t\treturn {\n\t\t\t[GameState.MENU]: this.stateMenu,\n\t\t\t[GameState.PLAYER_VS_PLAYER]: this.statePlayerVsPlayer,\n\t\t\t[GameState.PLAYER_VS_AI]: this.statePlayerVsIA,\n\t\t\t[GameState.TIE]: this.stateTie,\n\t\t\t[GameState.PLAYER_WON]: this.statePlayerWon\n\t\t}[this.state];\n\t}\n\n\tget state() {\n\t\treturn this._state;\n\t}\n\n\tset state(value) {\n\t\tthis._state = value;\n\n\t\t// Calls the setup function from the now new current state\n\t\tthis.currentGameState.setup();\n\t}\n\n}\n\n// Instantiate the game class\nconst instance = new Main();\nwindow.instance = instance;","/* eslint-disable max-depth */\nimport { CELL_EMPTY, CELL_X, CELL_O, TIE } from \"../constants\";\n\n/**\n * @typedef {import(\"./../main.js\").Main} Main\n */\n\nexport class Board {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tthis.main = main;\n\t\tthis.columns = 3;\n\t\tthis.rows = 3;\n\t\tthis.cellSize = 0;\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\n\t\t// Initialize cells\n\t\tthis.reset();\n\t}\n\n\t/**\n\t * Calculates the board size\n\t *\n\t * @param {Object} viewport\n\t * @param {number} viewport.width\n\t * @param {number} viewport.height\n\t */\n\tlayout(viewport) {\n\t\tconst padding = this.main.canvas.drawRatio;\n\n\t\t// Calculate the minimum possible size, given the screen width, leaving a padding equivalent to 2 cells\n\t\tconst amountOfCellsPerAxis = Math.min(this.columns, this.rows);\n\t\tthis.cellSize = Math.min(viewport.width, viewport.height) / (amountOfCellsPerAxis * 1.5);\n\t\tthis.width = Math.ceil(this.cellSize * amountOfCellsPerAxis + padding);\n\t\tthis.height = Math.ceil(this.cellSize * amountOfCellsPerAxis + padding);\n\t}\n\n\t// #region Rule validation\n\t#checkHorizontalLines() {\n\t\tconst traversed = this.#createEmptyMatrix(\"#\");\n\t\tlet y = 0;\n\t\tlet winner = null;\n\n\t\t// Check for horizontal lines\n\t\tfor (y = 0; y < this.rows; y++) {\n\t\t\twinner = this.cells[y][0];\n\n\t\t\tfor (let x = 1; x < this.columns; x++) {\n\t\t\t\tconst cell = this.cells[y][x];\n\n\t\t\t\tif (DEBUG) traversed[y][x] = 1;\n\n\t\t\t\t// The cell differs from the last one, or is empty, disqualifying this row as filled\n\t\t\t\tif (cell === CELL_EMPTY || cell !== this.cells[y][x - 1]) {\n\t\t\t\t\twinner = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (winner) break;\n\t\t}\n\n\t\tif (DEBUG) console.matrix(traversed, \"Horizontal lines\");\n\n\t\t// Return the winner and the line coordinates, within the grid\n\t\tif (winner)\n\t\t\treturn {\n\t\t\t\twinner,\n\t\t\t\tstart: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tx: this.columns - 1,\n\t\t\t\t\ty: y\n\t\t\t\t}\n\t\t\t};\n\n\t\treturn null;\n\t}\n\n\t#checkVerticalLines() {\n\t\tconst traversed = this.#createEmptyMatrix(\"#\");\n\t\tlet x = 0;\n\t\tlet winner = null;\n\n\t\t// Check for vertical lines\n\t\tfor (x = 0; x < this.columns; x++) {\n\t\t\twinner = this.cells[1][x];\n\n\t\t\tfor (let y = 1; y < this.rows; y++) {\n\t\t\t\tconst cell = this.cells[y][x];\n\n\t\t\t\tif (DEBUG) traversed[y][x] = 1;\n\n\t\t\t\t// If the cell differs from the last one, or is empty, disqualifying this row as filled\n\t\t\t\tif (cell === CELL_EMPTY || cell !== this.cells[y - 1][x]) {\n\t\t\t\t\twinner = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (winner) break;\n\t\t}\n\n\t\tif (DEBUG) console.matrix(traversed, \"Vertical lines\");\n\n\t\t// Return the winner and the line coordinates, within the grid\n\t\tif (winner)\n\t\t\treturn {\n\t\t\t\twinner,\n\t\t\t\tstart: {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: this.rows - 1\n\t\t\t\t}\n\t\t\t};\n\n\t\treturn null;\n\t}\n\n\t#checkTopLeftDiagonalLine() {\n\t\tconst traversed = this.#createEmptyMatrix(\"#\");\n\t\tlet winner = this.cells[1][1];\n\n\t\t// X - -\n\t\t// - X -\n\t\t// - - X\n\t\t// Check for top-left to bottom-right diagonal line\n\t\tfor (let x = 1; x < this.columns; x++) {\n\t\t\tconst cell = this.cells[x][x];\n\n\t\t\tif (DEBUG) traversed[x][x] = 1;\n\n\t\t\t// If the cell differs from the last one, or is empty, disqualifying this row as filled\n\t\t\tif (cell === CELL_EMPTY || cell !== this.cells[x - 1][x - 1]) {\n\t\t\t\twinner = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (DEBUG) console.matrix(traversed, \"Diagonal top-left line\");\n\n\t\t// Return the winner and the line coordinates, within the grid\n\t\tif (winner)\n\t\t\treturn {\n\t\t\t\twinner,\n\t\t\t\tstart: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tx: this.columns - 1,\n\t\t\t\t\ty: this.rows - 1\n\t\t\t\t}\n\t\t\t};\n\n\t\treturn null;\n\t}\n\n\t#checkTopRightDiagonalLine() {\n\t\tconst traversed = this.#createEmptyMatrix(\"#\");\n\t\tlet winner = this.cells[1][1];\n\n\t\t// - - X\n\t\t// - X -\n\t\t// X - -\n\t\t// Check for top-right to bottom-left diagonal line\n\t\tfor (let y = 1; y < this.rows; y++) {\n\t\t\t// Flips the x axis, from 0..2 to 2..0\n\t\t\tconst x = y % (this.columns - 1);\n\t\t\tconst cell = this.cells[y][x];\n\n\t\t\tif (DEBUG) traversed[y][x] = 1;\n\n\t\t\t// If the cell differs from the last one, or is empty, disqualifying this row as filled\n\t\t\tif (cell === CELL_EMPTY || cell !== this.cells[y - 1][x + 1]) {\n\t\t\t\twinner = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (DEBUG) console.matrix(traversed, \"Diagonal top-right line\");\n\n\t\t// Return the winner and the line coordinates, within the grid\n\t\tif (winner)\n\t\t\treturn {\n\t\t\t\twinner,\n\t\t\t\tstart: {\n\t\t\t\t\tx: this.columns - 1,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tend: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: this.rows - 1\n\t\t\t\t}\n\t\t\t};\n\n\t\treturn null;\n\t}\n\n\t#checkTie() {\n\t\t// If all cells are filled, and the previous checks didn't find any winner, this is a tie\n\t\treturn this.isBoardFilled ? TIE : null;\n\t}\n\n\tcheckRules() {\n\t\treturn (\n\t\t\tthis.#checkHorizontalLines() ||\n\t\t\tthis.#checkVerticalLines() ||\n\t\t\tthis.#checkTopLeftDiagonalLine() ||\n\t\t\tthis.#checkTopRightDiagonalLine() ||\n\t\t\tthis.#checkTie()\n\t\t);\n\t}\n\t// #endregion\n\n\t// #region Rendering\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\t// Draws the grid\n\t\tthis.#renderGrid(ctx);\n\n\t\t// Draws the cells\n\t\tthis.#renderCells(ctx);\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t#renderCells(ctx) {\n\t\tfor (let y = 0; y < this.rows; y++) {\n\t\t\tfor (let x = 0; x < this.columns; x++) {\n\t\t\t\tconst cell = this.cells[y][x];\n\n\t\t\t\t// Ignore empty cells\n\t\t\t\tif (!cell) continue;\n\n\t\t\t\t// Configure shadow\n\t\t\t\tctx.shadowBlur = 15;\n\t\t\t\tctx.shadowOffsetX = 0;\n\t\t\t\tctx.shadowOffsetY = 0;\n\t\t\t\tctx.shadowColor = cell === CELL_X ? this.main.theme.playerX : this.main.theme.playerO;\n\n\t\t\t\t// Draw image\n\t\t\t\tconst image = cell === CELL_X ? this.main.imageX : this.main.imageO;\n\t\t\t\timage.drawBufferTo(\n\t\t\t\t\tthis.x + x * this.cellSize + this.cellSize / 2 - image.width / 2,\n\t\t\t\t\tthis.y + y * this.cellSize + this.cellSize / 2 - image.height / 2,\n\t\t\t\t\tctx\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tctx.resetShadow();\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t#renderGrid(ctx) {\n\t\tctx.strokeStyle = this.main.theme.boardBorder;\n\t\tctx.lineWidth = 1;\n\n\t\t// Horizontal lines\n\t\tfor (let y = 1; y < this.rows; y++) {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(this.x, this.y + y * this.cellSize);\n\t\t\tctx.lineTo(this.x + this.width, this.y + y * this.cellSize);\n\t\t\tctx.stroke();\n\t\t\tctx.closePath();\n\t\t}\n\n\t\t// Vertical lines\n\t\tfor (let x = 1; x < this.columns; x++) {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(this.x + x * this.cellSize, this.y);\n\t\t\tctx.lineTo(this.x + x * this.cellSize, this.y + this.height);\n\t\t\tctx.stroke();\n\t\t\tctx.closePath();\n\t\t}\n\t}\n\t// #endregion\n\n\t// #region Utility\n\t#createEmptyMatrix(value = CELL_EMPTY) {\n\t\tconst tmp = [];\n\t\tfor (let i = 0; i < this.rows; i++) {\n\t\t\tconst tmpRow = [];\n\t\t\tfor (let j = 0; j < this.columns; j++) {\n\t\t\t\ttmpRow.push(value);\n\t\t\t}\n\t\t\ttmp.push(tmpRow);\n\t\t}\n\n\t\treturn tmp;\n\t}\n\n\tget isBoardFilled() {\n\t\tfor (let y = 0; y < this.rows; y++) {\n\t\t\tfor (let x = 0; x < this.columns; x++) {\n\t\t\t\tconst cell = this.cells[y][x];\n\n\t\t\t\tif (cell === CELL_EMPTY) return false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treset() {\n\t\tthis.cells = this.#createEmptyMatrix(CELL_EMPTY);\n\t}\n\t// #endregion\n\n}","\n/**\n * @typedef {import(\"../main.js\").Main} Main\n */\n\nexport class GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tthis.main = main;\n\t}\n\n\tasync load() {\n\n\t}\n\n\tsetup() {\n\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\n\t}\n\n\tget board() {\n\t\treturn this.main.board;\n\t}\n\n}","/* eslint-disable max-statements */\nimport { BORDER_RADIUS, CELL_EMPTY, FONT_FAMILY } from \"../constants.js\";\nimport { GameState } from \"../enum/game-state.js\";\nimport { SoundEffect } from \"../enum/sound-effect.js\";\nimport { AudioLoader } from \"../util/audio-loader.js\";\nimport { ImageLoader } from \"../util/image-loader.js\";\nimport { Button } from \"../widget/button.js\";\nimport { GameStateBase } from \"./base.js\";\n\n/**\n * @typedef {import(\"./../main.js\").Main} Main\n */\n\nexport class GameStateMenu extends GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tsuper(main);\n\n\t\t// Setup\n\t\tthis.alreadyTapped = false;\n\t\tthis.alpha = 0;\n\t\tthis.alphaTimer = 0;\n\t\tthis.alphaAnimationDuration = 1.0;\n\n\t\t// Random movement behavior\n\t\tthis.randomMovementTimer = 0;\n\t\tthis.intervalBetweenRandomMoves = 1.50;\n\n\t\t// Text shaking behavior\n\t\tthis.shakeTimer = 0;\n\t\tthis.intervalBetweenShakes = 2.0;\n\t\tthis.shakeOffsetX = 0;\n\n\t\t// Audio\n\t\tthis.audioGameStart = null;\n\t}\n\n\tsetup() {\n\t\t// Resets internal timers\n\t\tthis.shakeTimer = 0;\n\t\tthis.randomMovementTimer = 0;\n\t\tthis.alpha = 0;\n\t\tthis.alphaTimer = 0;\n\n\t\t// Reset the board\n\t\tthis.board.reset();\n\t}\n\n\tasync load() {\n\t\t// Audio\n\t\tthis.audioGameStart = await AudioLoader.load(SoundEffect.GAME_START, { volume: 0.25 });\n\n\t\t// UI\n\t\tconst buttonWidth = this.board.width / 4;\n\t\tconst buttonHeight = 30;\n\t\tlet buttonY = this.board.height / 3 + 48 * 1.5;\n\n\t\tthis.buttonPlayerVsPlayer = new Button(\n\t\t\t{\n\t\t\t\ttext: \"Player vs Player\",\n\t\t\t\tx: this.board.width / 2 - buttonWidth / 2,\n\t\t\t\ty: buttonY,\n\t\t\t\twidth: buttonWidth,\n\t\t\t\theight: buttonHeight,\n\t\t\t\tonClick: () => {\n\t\t\t\t\t// Change the game state\n\t\t\t\t\tthis.main.state = GameState.PLAYER_VS_PLAYER;\n\t\t\t\t\tthis.#onGameStateChange();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tawait this.buttonPlayerVsPlayer.load();\n\n\t\t// Translates the buttons vertical position\n\t\tbuttonY += buttonHeight + 15;\n\t\tthis.buttonPlayerVsAI = new Button(\n\t\t\t{\n\t\t\t\ttext: \"Player vs AI\",\n\t\t\t\tx: this.board.width / 2 - buttonWidth / 2,\n\t\t\t\ty: buttonY,\n\t\t\t\twidth: buttonWidth,\n\t\t\t\theight: buttonHeight,\n\t\t\t\tonClick: () => {\n\t\t\t\t\t// Change the game state\n\t\t\t\t\tthis.main.state = GameState.PLAYER_VS_AI;\n\t\t\t\t\tthis.#onGameStateChange();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tawait this.buttonPlayerVsAI.load();\n\t}\n\n\t#onGameStateChange() {\n\t\t// Play sound effect\n\t\tthis.audioGameStart.play();\n\n\t\t// Reset the board\n\t\tthis.board.reset();\n\n\t\t// Request first frame\n\t\tthis.main.postInvalidate();\n\n\t\t// Resets the cursor\n\t\tdocument.body.style.cursor = \"unset\";\n\n\t\t// Reset global alpha\n\t\tthis.main.ctx.globalAlpha = 1.0;\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\t\t// Update components\n\t\tthis.#updateTextShake(deltaTime);\n\t\tthis.#updateRandomMoves(deltaTime);\n\n\t\tif (this.alreadyTapped) {\n\t\t\t// Resets the cursor\n\t\t\tdocument.body.style.cursor = \"unset\";\n\n\t\t\t// Update components\n\t\t\tthis.#updateUI(deltaTime);\n\t\t} else {\n\t\t\tthis.#updateSplash(deltaTime);\n\t\t}\n\n\t\tif (this.alphaTimer >= this.alphaAnimationDuration) {\n\t\t\tthis.alphaTimer = this.alphaAnimationDuration;\n\t\t} else {\n\t\t\tthis.alphaTimer += deltaTime;\n\t\t}\n\t\tthis.alpha = Math.pow(this.alphaTimer / this.alphaAnimationDuration, 2);\n\n\t\t// Request re-draw\n\t\tthis.main.invalidate();\n\t}\n\n\t#updateRandomMoves(deltaTime) {\n\t\tthis.randomMovementTimer += deltaTime + Math.random() * 0.05;\n\n\t\tif (this.randomMovementTimer >= this.intervalBetweenRandomMoves) {\n\t\t\tthis.randomMovementTimer -= this.intervalBetweenRandomMoves;\n\n\t\t\tconst isBoardFilled = this.board.isBoardFilled;\n\n\t\t\tif (isBoardFilled) {\n\t\t\t\tthis.board.reset();\n\t\t\t} else {\n\t\t\t\tthis.#randomizeMoves();\n\t\t\t}\n\t\t}\n\t}\n\n\t#updateTextShake(deltaTime) {\n\t\tthis.shakeTimer += deltaTime;\n\n\t\tfunction easeInOutCubic(x) {\n\t\t\treturn x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n\t\t}\n\n\t\tif (this.shakeTimer >= this.intervalBetweenShakes) {\n\t\t\tthis.shakeTimer -= this.intervalBetweenShakes;\n\t\t}\n\n\t\tconst progress = 0.5 - Math.abs(this.shakeTimer / this.intervalBetweenShakes - 0.5);\n\t\tthis.shakeOffsetX = 1 + easeInOutCubic(progress) * 0.25;\n\t}\n\n\t#updateUI(deltaTime) {\n\t\tthis.buttonPlayerVsPlayer.update(deltaTime, this.main.mouse);\n\t\tthis.buttonPlayerVsAI.update(deltaTime, this.main.mouse);\n\t}\n\n\t#updateSplash(deltaTime) {\n\t\tdocument.body.style.cursor = \"cursor\";\n\n\t\t// If the user has clicked on the canvas, show the UI\n\t\t// This is required in order to play audio, some browsers require user interaction prior to audio playing\n\t\tif (this.main.mouse.isClicking) {\n\t\t\tthis.alreadyTapped = true;\n\t\t\tthis.alphaTimer = 0;\n\t\t}\n\t}\n\n\t#randomizeMoves() {\n\t\t// Check if any of the random moves actually won the game\n\t\tconst result = this.board.checkRules();\n\t\tif (result != null) return this.board.reset();\n\n\t\t// Randomize movements\n\t\tlet foundPosition = false;\n\t\tlet position = null;\n\t\twhile (!foundPosition) {\n\t\t\tposition = {\n\t\t\t\tx: Math.randomIntRange(0, this.board.columns),\n\t\t\t\ty: Math.randomIntRange(0, this.board.rows)\n\t\t\t};\n\n\t\t\tif (this.board.cells[position.y][position.x] === CELL_EMPTY) foundPosition = true;\n\t\t}\n\n\t\t// Mark the cell as current player turn\n\t\tthis.board.cells[position.y][position.x] = this.main.turn;\n\n\t\t// Request next turn\n\t\tthis.main.nextTurn();\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\t// Draw board, blurred\n\t\tctx.save();\n\t\tctx.filter = \"blur(20px)\";\n\t\tthis.board.render(ctx);\n\t\tctx.restore();\n\n\t\t// Fade-in on the splash screen\n\t\tctx.globalAlpha = this.alreadyTapped ? 1.0 : this.alpha;\n\n\t\t// Draw background, dimming the board\n\t\tctx.beginPath();\n\t\tctx.fillStyle = this.main.theme.dimBackground;\n\t\tctx.strokeStyle = this.main.theme.dimBackground;\n\t\tctx.roundRect(0, 0, this.main.canvas.width, this.main.canvas.height, BORDER_RADIUS * this.main.canvas.drawRatio);\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tif (this.alreadyTapped) {\n\t\t\tctx.globalAlpha = this.alpha;\n\t\t\tthis.#renderMenuOptions(ctx);\n\t\t} else {\n\t\t\tthis.#renderSplash(ctx);\n\t\t}\n\t}\n\n\t#renderSplash(ctx) {\n\t\tctx.save();\n\t\t// Draw logo subtitle\n\t\tctx.translate(this.main.canvas.width / 2, this.main.canvas.height / 2);\n\t\tctx.scale(this.shakeOffsetX, this.shakeOffsetX);\n\t\tctx.shadowColor = this.main.theme.dimBackground;\n\t\tctx.fillStyle = this.main.theme.foreground;\n\t\tctx.font = `10pt ${FONT_FAMILY}`;\n\t\tctx.fillTextCentered(\"Tap/click to start\", 0, 0);\n\t\tctx.restore();\n\t}\n\n\t#renderMenuOptions(ctx) {\n\t\t// Draw logo title\n\t\tctx.save();\n\t\tctx.shadowOffsetX = 0;\n\t\tctx.shadowOffsetY = 4;\n\t\tctx.shadowColor = this.main.theme.boardBackground;\n\t\tctx.shadowBlur = 7.5;\n\t\tctx.fillStyle = this.main.theme.foreground;\n\t\tctx.font = `36pt ${FONT_FAMILY}`;\n\t\tctx.fillTextCentered(\"Tic-Tac-Toe\", this.main.canvas.width / 2, this.main.canvas.height / 3);\n\n\t\t// Draw UI elements, if the user has tapped already\n\t\tthis.buttonPlayerVsPlayer.render(ctx);\n\t\tthis.buttonPlayerVsAI.render(ctx);\n\n\t\t// Draw logo subtitle\n\t\tctx.translate(this.main.canvas.width / 2, this.main.canvas.height / 3 + 48);\n\t\tctx.scale(this.shakeOffsetX, this.shakeOffsetX);\n\t\tctx.shadowColor = this.main.theme.dimBackground;\n\t\tctx.fillStyle = this.main.theme.foreground;\n\t\tctx.font = `10pt ${FONT_FAMILY}`;\n\t\tctx.fillTextCentered(\"Select an option below\", 0, 0);\n\n\t\tctx.restore();\n\n\t\t// Reset shadow\n\t\tctx.resetShadow();\n\t}\n\n}\n","import { CELL_EMPTY, CELL_O, CELL_X, TIE } from \"../constants.js\";\nimport { AIController } from \"../controller/ai.js\";\nimport { GameState } from \"../enum/game-state.js\";\nimport { SoundEffect } from \"../enum/sound-effect.js\";\nimport { AudioLoader } from \"../util/audio-loader.js\";\nimport { GameStateBase } from \"./base.js\";\n\n/**\n * @typedef {import(\"../main.js\").Main} Main\n */\n\nexport class GameStatePlayerVsIA extends GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tsuper(main);\n\n\t\t// Audio\n\t\tthis.audioCellPlace = null;\n\n\t\t// Controller\n\t\tthis.ai = new AIController(this.main);\n\t}\n\n\tasync load() {\n\t\t// Audio\n\t\tthis.audioCellPlace = await AudioLoader.load(SoundEffect.CELL_PLACE, { volume: 0.15 });\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\t\tif (this.isPlayerTurn) {\n\t\t\tthis.#updatePlayer(deltaTime);\n\t\t} else if (this.isAiTurn) {\n\t\t\tthis.#updateAI(deltaTime);\n\t\t}\n\t}\n\n\t#updatePlayer(deltaTime) {\n\t\t// Fetch mouse position\n\t\tconst mX = this.main.mouse.position.x;\n\t\tconst mY = this.main.mouse.position.y;\n\t\tlet isMouseOverEmptyCell = false;\n\n\t\t// Check if the mouse is within the board's bounds\n\t\tif (mX >= this.board.x && mX <= this.board.x + this.board.width && mY >= this.board.y && mY <= this.board.y + this.board.height) {\n\t\t\t// Localize coordinates to row and column\n\t\t\tconst col = Math.floor((mX - this.board.x) / this.board.cellSize);\n\t\t\tconst row = Math.floor((mY - this.board.y) / this.board.cellSize);\n\n\t\t\t// Search for the cell in the localized coordinates\n\t\t\tconst cell = this.board.cells[row][col];\n\t\t\tisMouseOverEmptyCell = cell == CELL_EMPTY;\n\n\t\t\t// If clicking\n\t\t\tif (isMouseOverEmptyCell && this.main.mouse.isClicking) {\n\t\t\t\tthis.board.cells[row][col] = this.main.turn;\n\n\t\t\t\tthis.#onCellPlaced();\n\t\t\t}\n\t\t}\n\n\t\t// Set the cursor to pointer, when over an empty cell\n\t\tdocument.body.style.cursor = isMouseOverEmptyCell ? \"pointer\" : \"unset\";\n\t}\n\n\t#updateAI(deltaTime) {\n\t\tconst move = this.ai.evaluate();\n\t\tthis.board.cells[move.move.y][move.move.x] = this.main.turn;\n\n\t\tthis.#onCellPlaced();\n\n\t\t// Resets the cursor\n\t\tdocument.body.style.cursor = \"unset\";\n\t}\n\n\t#onCellPlaced() {\n\t\t// Play sound effect\n\t\tthis.audioCellPlace.play();\n\n\t\t// Check if the game has finished\n\t\tconst result = this.board.checkRules();\n\t\tif (result && typeof result === \"object\") {\n\t\t\tthis.main.result = result;\n\t\t\tthis.main.state = GameState.PLAYER_WON;\n\t\t} else if (result === TIE) {\n\t\t\tthis.main.result = result;\n\t\t\tthis.main.state = GameState.TIE;\n\t\t} else {\n\t\t\t// Calls for next turn\n\t\t\tthis.main.nextTurn();\n\t\t}\n\n\t\t// Hack: schedules after this frame to make the canvas dirty\n\t\tthis.main.invalidate();\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\tthis.main.board.render(ctx);\n\t}\n\n\tget isPlayerTurn() {\n\t\treturn this.main.turn === CELL_X;\n\t}\n\n\tget isAiTurn() {\n\t\treturn this.main.turn === CELL_O;\n\t}\n\n}","import { CELL_EMPTY, TIE } from \"../constants.js\";\nimport { GameState } from \"../enum/game-state.js\";\nimport { SoundEffect } from \"../enum/sound-effect.js\";\nimport { AudioLoader } from \"../util/audio-loader.js\";\nimport { GameStateBase } from \"./base.js\";\n\n/**\n * @typedef {import(\"../main.js\").Main} Main\n */\n\nexport class GameStatePlayerVsPlayer extends GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tsuper(main);\n\n\t\t// Audio\n\t\tthis.audioCellPlace = null;\n\t}\n\n\tasync load() {\n\t\t// Audio\n\t\tthis.audioCellPlace = await AudioLoader.load(SoundEffect.CELL_PLACE, { volume: 0.15 });\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\t\t// Fetch mouse position\n\t\tconst mX = this.main.mouse.position.x;\n\t\tconst mY = this.main.mouse.position.y;\n\t\tlet isMouseOverEmptyCell = false;\n\n\t\t// Check if the mouse is within the board's bounds\n\t\tif (mX >= this.board.x && mX <= this.board.x + this.board.width && mY >= this.board.y && mY <= this.board.y + this.board.height) {\n\t\t\t// Localize coordinates to row and column\n\t\t\tconst col = Math.floor((mX - this.board.x) / this.board.cellSize);\n\t\t\tconst row = Math.floor((mY - this.board.y) / this.board.cellSize);\n\n\t\t\t// Search for the cell in the localized coordinates\n\t\t\tconst cell = this.board.cells[row][col];\n\t\t\tisMouseOverEmptyCell = cell == CELL_EMPTY;\n\n\t\t\t// If clicking\n\t\t\tif (isMouseOverEmptyCell && this.main.mouse.isClicking) {\n\t\t\t\tthis.board.cells[row][col] = this.main.turn;\n\n\t\t\t\tthis.#onCellPlaced();\n\t\t\t}\n\t\t}\n\n\t\t// Set the cursor to pointer, when over an empty cell\n\t\tdocument.body.style.cursor = isMouseOverEmptyCell ? \"pointer\" : \"unset\";\n\t}\n\n\t#onCellPlaced() {\n\t\t// Play sound effect\n\t\tthis.audioCellPlace.play();\n\n\t\t// Check if the game has finished\n\t\tconst result = this.board.checkRules();\n\t\tif (result && typeof result === \"object\") {\n\t\t\tthis.main.result = result;\n\t\t\tthis.main.state = GameState.PLAYER_WON;\n\t\t} else if (result === TIE) {\n\t\t\tthis.main.result = result;\n\t\t\tthis.main.state = GameState.TIE;\n\t\t} else {\n\t\t\t// Calls for next turn\n\t\t\tthis.main.nextTurn();\n\t\t}\n\n\t\t// Hack: schedules after this frame to make the canvas dirty\n\t\tthis.main.invalidate();\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\tthis.main.board.render(ctx);\n\t}\n\n}","import { CELL_O } from \"../constants.js\";\nimport { GameState } from \"../enum/game-state.js\";\nimport { SoundEffect } from \"../enum/sound-effect.js\";\nimport { AudioLoader } from \"../util/audio-loader.js\";\nimport { GameStateBase } from \"./base.js\";\n\n/**\n * @typedef {import(\"../main.js\").Main} Main\n */\n\nexport class GameStatePlayerWon extends GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tsuper(main);\n\t}\n\n\tasync load() {\n\t\tthis.audioGameWon = await AudioLoader.load(SoundEffect.GAME_START, { volume: 0.1 });\n\t\tthis.audioPenStroke = await AudioLoader.load(SoundEffect.PEN_STROKE, { volume: 0.5 });\n\t}\n\n\tsetup() {\n\t\t// Resets timers\n\t\tthis.animationTimer = 0;\n\t\tthis.animationDuration = 0.318662 / 2;\n\t\tthis.animationDone = false;\n\n\t\t// Play sound effects\n\t\tthis.audioGameWon.play();\n\t\tthis.audioPenStroke.play();\n\n\t\t// Set the cursor\n\t\tdocument.body.style.cursor = \"pointer\";\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\t\t// Update the pen stroke animation\n\t\tif (!this.animationDone) {\n\t\t\tthis.animationTimer += deltaTime;\n\t\t\tif (this.animationTimer >= this.animationDuration) {\n\t\t\t\tthis.animationTimer = this.animationDuration;\n\t\t\t\tthis.animationDone = true;\n\t\t\t}\n\n\t\t\tthis.main.invalidate();\n\t\t}\n\n\t\t// Check if the user has clicked, and if so resets the game state\n\t\tif (this.main.mouse.isClicking) {\n\t\t\tthis.main.state = GameState.MENU;\n\t\t}\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\t// eslint-disable-next-line max-statements\n\trender(ctx) {\n\t\t// Draw board\n\t\tthis.board.render(ctx);\n\n\t\t// Store in constants for better readability\n\t\tconst progress = this.animationProgress;\n\t\tconst cellSize = this.board.cellSize;\n\t\tconst start = this.result.start;\n\t\tconst end = this.result.end;\n\n\t\t// Define padding, 1/4 when diagonals and 1/2 when straight vertical or horizontal lines\n\t\tconst verticalPadding = start.y === end.y ? cellSize / 2 : cellSize / 4;\n\t\tlet horizontalPadding = start.x === end.x ? cellSize / 2 : cellSize / 4;\n\t\tif (start.x > end.x) horizontalPadding = cellSize - horizontalPadding;\n\n\t\t// Calculate the starting and ending positions\n\t\tconst sX = start.x * cellSize + horizontalPadding;\n\t\tconst sY = start.y * cellSize + verticalPadding;\n\t\tconst eX = end.x * cellSize + cellSize - horizontalPadding;\n\t\tconst eY = end.y * cellSize + cellSize - verticalPadding;\n\n\t\t// Interpolate between start and end positions based on the animation progress\n\t\tconst x = sX * (1.0 - progress) + eX * (progress);\n\t\tconst y = sY * (1.0 - progress) + eY * (progress);\n\n\t\t// Configure line thickness and shape\n\t\tctx.lineWidth = 15;\n\t\tctx.lineCap = \"round\";\n\t\tctx.lineJoin = \"round\";\n\t\tctx.strokeStyle = \"white\";\n\n\t\t// Configure line shadow\n\t\tctx.shadowBlur = 15;\n\t\tctx.shadowOffsetX = 0;\n\t\tctx.shadowOffsetY = 0;\n\t\tctx.shadowColor = this.result.winner === CELL_O ? this.main.theme.playerO : this.main.theme.playerX;\n\n\t\t// Render it\n\t\tctx.beginPath();\n\t\tctx.moveTo(sX, sY);\n\t\tctx.lineTo(x, y);\n\t\tctx.stroke();\n\n\t\t// Reset shadow\n\t\tctx.resetShadow();\n\t}\n\n\t/**\n\t * @return { { winner: number, start: { x: number, y: number }, end: { x: number, y: number } } }\n\t */\n\tget result() {\n\t\treturn this.main.result;\n\t}\n\n\tget animationProgress() {\n\t\treturn Math.pow(this.animationTimer / this.animationDuration, 2);\n\t}\n\n}\n","import { FONT_FAMILY } from \"../constants.js\";\nimport { GameState } from \"../enum/game-state.js\";\nimport { GameStateBase } from \"./base.js\";\n\n/**\n * @typedef {import(\"../main.js\").Main} Main\n */\n\nexport class GameStateTie extends GameStateBase {\n\n\t/**\n\t * @param {Main} main\n\t */\n\tconstructor(main) {\n\t\tsuper(main);\n\t}\n\n\tasync load() {}\n\n\tsetup() {\n\t\t// Resets timers\n\t\tthis.animationTimer = 0;\n\t\tthis.animationDuration = 0.318662 / 2;\n\t\tthis.animationDone = false;\n\n\t\t// Set the cursor\n\t\tdocument.body.style.cursor = \"pointer\";\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t */\n\tupdate(deltaTime) {\n\t\t// Handle the animation timer\n\t\tif (!this.animationDone) {\n\t\t\tthis.animationTimer += deltaTime;\n\n\t\t\tif (this.animationTimer >= this.animationDuration) {\n\t\t\t\tthis.animationTimer = this.animationDuration;\n\t\t\t\tthis.animationDone = true;\n\t\t\t}\n\n\t\t\t// Invalidates canvas\n\t\t\tthis.main.invalidate();\n\t\t}\n\n\t\t// Check if the user has clicked, and if so resets the game state\n\t\tif (this.main.mouse.isClicking) {\n\t\t\tthis.main.state = GameState.MENU;\n\t\t}\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\tthis.board.render(ctx);\n\n\t\t// Draw tie text\n\t\tctx.save();\n\t\tctx.globalAlpha = this.animationProgress;\n\t\tctx.shadowOffsetX = 0;\n\t\tctx.shadowOffsetY = 4;\n\t\tctx.shadowColor = this.main.theme.boardBackground;\n\t\tctx.shadowBlur = 7.5;\n\t\tctx.fillStyle = this.main.theme.foreground;\n\t\tctx.font = `36pt ${FONT_FAMILY}`;\n\t\tctx.fillTextCentered(\"Tie\", this.main.canvas.width / 2, this.main.canvas.height / 3);\n\t\tctx.restore();\n\t}\n\n\tget animationProgress() {\n\t\treturn Math.pow(this.animationTimer / this.animationDuration, 2);\n\t}\n\n}\n","import { SoundEffect } from \"../enum/sound-effect\";\n\nexport class AudioLoader {\n\n\tstatic #cache = { };\n\n\t/**\n\t * Resolves and expands an sound effect to absolute path\n\t *\n\t * @param {SoundEffect} soundFX\n\t * @return {string} The resolved path of the audio file\n\t */\n\tstatic #resolveAudioPath(soundFX) {\n\t\tconst locationRoot = window.location.href.indexOf(\"http://localhost:\")\n\t\t\t? window.location.href\n\t\t\t: window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\"));\n\t\tconst relativePath = \"/assets/audio/\";\n\n\t\treturn locationRoot + relativePath + soundFX;\n\t}\n\n\tstatic load(soundFX, { volume = 1 }) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Resolves the path\n\t\t\tconst path = this.#resolveAudioPath(soundFX);\n\n\t\t\t// Requests audio\n\t\t\tconst audio = new Audio(path);\n\n\t\t\t// Configure it\n\t\t\taudio.preload = \"auto\";\n\t\t\taudio.volume = volume;\n\n\t\t\t// Wait for it to be loaded\n\t\t\taudio.addEventListener(\"canplaythrough\", (e) => {\n\t\t\t\tresolve(audio);\n\t\t\t}, { once: true });\n\n\t\t\taudio.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\n\t\t\taudio.load();\n\t\t});\n\t}\n\n}","Math.clamp = function (x, min, max) {\n\tif (x > max) return max;\n\telse if (x < min) return min;\n\telse return x;\n};\n\nMath.lerp = function (current, target, speed) {\n\tconst difference = target - current;\n\n\tif (difference > speed) return current + speed;\n\telse if (difference < -speed) return current - speed;\n\telse return current + difference;\n};\n\nMath.randomRange = function (min, max) {\n\treturn Math.random() * (max - min) + min;\n};\n\nMath.randomIntRange = function (min, max) {\n\treturn Math.floor(Math.randomRange(min, max));\n};\n\nArray.prototype.random = function () {\n\treturn this[Math.floor(Math.random() * this.length)];\n};\n\nwindow.addLoadEventListener = function (handler, timeout = 1000) {\n\tlet fired = false;\n\n\tconst _func = () => {\n\t\tif (fired) return;\n\t\tfired = true;\n\n\t\thandler();\n\t};\n\n\twindow.addEventListener(\"DOMContentLoaded\", _func);\n\twindow.addEventListener(\"load\", _func);\n\tdocument.addEventListener(\"load\", _func);\n\twindow.addEventListener(\"ready\", _func);\n\tsetTimeout(_func, timeout);\n};\n\nwindow.addVisibilityChangeEventListener = function (handler) {\n\tconst prefixes = [\"webkit\", \"moz\", \"ms\", \"\"];\n\n\tlet fired = false;\n\n\tconst _func = () => {\n\t\tif (fired) return;\n\t\tfired = true;\n\n\t\tconst isDocumentHidden = prefixes\n\t\t\t.map((x) => (x && x.length > 0 ? `${x}Hidden` : \"hidden\"))\n\t\t\t.map((x) => document[x]).reduce((a, b) => a || b, false);\n\n\t\thandler(!isDocumentHidden);\n\n\t\tsetTimeout(() => {\n\t\t\tfired = false;\n\t\t}, 100);\n\t};\n\n\tfor (const prefix of prefixes) document.addEventListener(`${prefix}visibilitychange`, _func);\n\tdocument.onvisibilitychange = _func;\n};\n\nif (!CanvasRenderingContext2D.prototype.hasOwnProperty(\"roundRect\")) {\n\t// eslint-disable-next-line max-params\n\tCanvasRenderingContext2D.prototype.roundRect = function (x, y, width, height, radius) {\n\t\tlet r = radius;\n\t\tif (Array.isArray(r)) {\n\t\t\tif (r.length <= 1) r = { tl: r[0], tr: r[0], br: r[0], bl: r[0] };\n\t\t\telse r = { tl: r[0] || 0, tr: r[1] || 0, br: r[2] || 0, bl: r[3] || 0 };\n\t\t} else if (typeof r === \"number\") {\n\t\t\tr = { tl: r, tr: r, br: r, bl: r };\n\t\t} else {\n\t\t\tr = { ...{ tl: 0, tr: 0, br: 0, bl: 0 }, ...r };\n\t\t}\n\n\t\tthis.beginPath();\n\t\tthis.moveTo(x + r.tl, y);\n\t\tthis.lineTo(x + width - r.tr, y);\n\t\tthis.quadraticCurveTo(x + width, y, x + width, y + r.tr);\n\t\tthis.lineTo(x + width, y + height - r.br);\n\t\tthis.quadraticCurveTo(x + width, y + height, x + width - r.br, y + height);\n\t\tthis.lineTo(x + r.bl, y + height);\n\t\tthis.quadraticCurveTo(x, y + height, x, y + height - r.bl);\n\t\tthis.lineTo(x, y + r.tl);\n\t\tthis.quadraticCurveTo(x, y, x + r.tl, y);\n\t\tthis.closePath();\n\t};\n}\n\nString.prototype.toCamelCase = function() {\n\treturn this.replace(\"--\", \"\")\n\t\t.replace(/-./g, (x) => x[1].toUpperCase())\n\t\t.trim();\n};\n\nif (!window.hasOwnProperty(\"Color\")) window.Color = { };\nwindow.Color.isColorLight = function(hex) {\n\tconst color = +(`0x${hex.trim().slice(1).replace(hex.length < 5 && /./g, \"$&$&\")}`);\n\n\tconst r = color >> 16;\n\tconst g = (color >> 8) & 255;\n\tconst b = color & 255;\n\n\t// HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n\tconst hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\n\n\treturn hsp > 127.5;\n};\n\nconsole.matrix = function(matrix, hint=null) {\n\tif (hint) console.log(hint);\n\n\tlet buffer = \"%c\";\n\tfor (const row of matrix) {\n\t\tfor (let col = 0; col < row.length; col++) {\n\t\t\tbuffer += row[col] === null ? \"#\" : row[col];\n\t\t\tif (col < row.length - 1) {\n\t\t\t\tbuffer += \"\";\n\t\t\t}\n\t\t}\n\t\tbuffer += \"\\n\";\n\t}\n\n\tconsole.log(buffer,  \"font-size: 1.2em; font-family: monospace; line-height: 0.6em\");\n};\n\nHTMLCanvasElement.prototype.screenshot = function(filename=\"download.png\") {\n\tconst a = document.createElement(\"a\");\n\ta.download = filename;\n\ta.href = this.toDataURL(\"image/png;base64\");\n\ta.style.visibility = \"hidden\";\n\ta.style.display = \"none\";\n\tdocument.body.appendChild(a);\n\n\tsetTimeout(() => {\n\t\ta.click();\n\t\tdocument.body.removeChild(a);\n\t}, 100);\n};\n\nCanvasRenderingContext2D.prototype.fillTextCentered = function(text, x, y) {\n\tthis.save();\n\tthis.textAlign = \"center\";\n\tthis.textBaseline = \"middle\";\n\tthis.fillText(text, x, y);\n\tthis.restore();\n};\n\nCanvasRenderingContext2D.prototype.resetShadow = function() {\n\tthis.shadowOffsetX = 0;\n\tthis.shadowOffsetY = 0;\n\tthis.shadowColor = \"transparent\";\n\tthis.shadowBlur = 0;\n};","import { FONT_FAMILY } from \"../constants\";\n\nexport class FontLoader {\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\tstatic async load(ctx) {\n\t\t// Define the sizes on which the font will be used, to preload\n\t\tconst sizes = [36, 10];\n\n\t\t// For each size, check if already loaded, if not wait until it loads\n\t\tconst promises = sizes.map(async size => {\n\t\t\tconst font = `${size}pt ${FONT_FAMILY}`;\n\t\t\tif (!document.fonts.check(font)) {\n\t\t\t\tawait document.fonts.load(font);\n\t\t\t}\n\t\t});\n\n\t\t// Waits in parallel\n\t\tawait Promise.all(promises);\n\t}\n\n}","/* eslint-disable no-param-reassign */\n/* eslint-disable max-statements */\nimport { DensityCanvas } from \"../widget/density-canvas\";\n\nexport class ImageLoader {\n\n\tstatic #loadImage(identifier) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Requests the image element\n\t\t\tconst img = document.createElement(\"img\");\n\t\t\timg.src = `/assets/images/${identifier}`;\n\n\t\t\timg.onload = (e) => {\n\t\t\t\t// Return it\n\t\t\t\tresolve(img);\n\t\t\t};\n\n\t\t\timg.onerror = (e) => {\n\t\t\t\treject(e);\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Loads an image asset\n\t *\n\t * @param {string} identifier Define the filename to be loaded\n\t * @param {object} options Define options for processing the image, after loading\n\t * @param {number} [options.width]\n\t * @param {number} [options.height]\n\t * @param {string} [options.tint]\n\t *\n\t * @return {DensityCanvas|HTMLImageElement}\n\t */\n\tstatic async load(identifier, options) {\n\t\t// Actually loads the image\n\t\tconst image = await this.#loadImage(identifier);\n\n\t\t// If required, process it\n\t\tif (options && (options.width || options.height || options.tint))\n\t\t\treturn this.process(image, options);\n\t\telse\n\t\t\treturn image;\n\t}\n\n\t/**\n\t * Loads an image asset\n\t *\n\t * @param {HTMLImageElement} image The image to be processed\n\t * @param {object} options Define options for processing the image\n\t * @param {number} [options.width]\n\t * @param {number} [options.height]\n\t * @param {string} [options.tint]\n\t *\n\t * @return {DensityCanvas|HTMLImageElement}\n\t */\n\tstatic process(image, options) {\n\t\t// Creates a canvas element\n\t\tconst canvas = new DensityCanvas();\n\t\tconst ctx = canvas.context;\n\n\t\t// Resizes the image\n\t\tif (options.width && options.height) {\n\t\t\t// Set fixed dimensions\n\t\t\timage.width = options.width;\n\t\t\timage.height = options.height;\n\t\t} else if (options.width && !options.height) {\n\t\t\t// Resizes the image proportionally to its original aspect ratio\n\t\t\tconst aspectRatio = image.height / image.width;\n\t\t\timage.width = options.width * aspectRatio;\n\t\t\timage.height = options.width;\n\n\t\t\toptions.height = image.width;\n\t\t} else if (!options.width && options.height) {\n\t\t\t// Resizes the image proportionally to its original aspect ratio\n\t\t\tconst aspectRatio = image.width / image.height;\n\t\t\timage.width = options.height * aspectRatio;\n\t\t\timage.height = options.height;\n\n\t\t\toptions.width = image.width;\n\t\t} else if (!options.width && !options.height) {\n\t\t\t// Maintain the image dimensions\n\t\t\toptions.width = image.width;\n\t\t\toptions.height = image.height;\n\t\t}\n\t\tcanvas.setSize(options);\n\n\t\t// Clears canvas\n\t\tcanvas.clear();\n\n\t\t// Draws the image, centered\n\t\tctx.drawImage(image, (options.width - image.width) / 2, (options.height - image.height) / 2, image.width, image.height);\n\n\t\t// Apply option.tinting\n\t\tif (options.tint) {\n\t\t\tctx.globalCompositeOperation = \"source-in\";\n\t\t\tctx.fillStyle = options.tint;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\n\t\treturn canvas;\n\t}\n\n}","import { BORDER_RADIUS, FONT_FAMILY } from \"../constants\";\nimport { SoundEffect } from \"../enum/sound-effect\";\nimport { AudioLoader } from \"../util/audio-loader\";\n\n/**\n * @typedef {import(\"./../controller/mouse.js\").MouseController} MouseController\n * @typedef {import(\"./../controller/theme.js\").ThemeController} ThemeController\n */\n\nexport class Button {\n\n\t/**\n\t *\n\t * @param {string} text\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t * @param {Function} onClick\n\t */\n\tconstructor({ text, x, y, width, height, channel, onClick }) {\n\t\tthis.text = text;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.onClick = onClick;\n\n\t\tthis.audioHover = null;\n\n\t\tthis.isHovered = false;\n\t}\n\n\tasync load() {\n\t\tthis.audioHover = await AudioLoader.load(SoundEffect.BUTTON_HOVER, { volume: 0.05 });\n\t}\n\n\t/**\n\t * @param {number} deltaTime\n\t * @param {MouseController} mouse\n\t */\n\tupdate(deltaTime, mouse) {\n\t\tconst wasHoveredPreviously = this.isHovered;\n\t\tconst isWithinBounds = mouse.position.x >= this.x && mouse.position.x <= this.x + this.width && mouse.position.y >= this.y && mouse.position.y <= this.y + this.height;\n\t\tthis.isHovered = isWithinBounds;\n\n\t\tif (this.isHovered) {\n\t\t\tdocument.body.style.cursor = \"pointer\";\n\n\t\t\t// If now hovered, play a sound effect\n\t\t\tif (!wasHoveredPreviously || mouse.isClicking) this.audioHover.play();\n\n\t\t\t// If clicked\n\t\t\tif (mouse.isClicking) this.onClick();\n\t\t}\n\t}\n\n\t/**\n\t * @param {CanvasRenderingContext2D} ctx\n\t */\n\trender(ctx) {\n\t\t/** @type {ThemeController */\n\t\tconst theme = window.instance.theme;\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = this.isHovered ? theme.boardBorder : theme.boardBackground;\n\t\tctx.strokeStyle = this.isHovered ? theme.boardBackground : theme.boardBorder;\n\t\tctx.lineWidth = 1;\n\t\tctx.roundRect(this.x, this.y, this.width, this.height, BORDER_RADIUS);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = theme.foreground;\n\t\tctx.font = `12pt ${FONT_FAMILY}`;\n\t\tctx.fillTextCentered(this.text, this.x + this.width / 2, this.y + this.height / 2);\n\t}\n\n}","export class DensityCanvas {\n\n\tconstructor() {\n\t\t/** @type {HTMLCanvasElement} */\n\t\tthis.canvas = document.createElement(\"canvas\");\n\t\tthis.context = this.canvas.getContext(\"2d\");\n\t\tthis.virtualWidth = null;\n\t\tthis.virtualHeight = null;\n\t\tthis.enableHighDPI = true;\n\t}\n\n\tfullscreen() {\n\t\tthis.canvas.onfullscreenerror = (e) => {\n\t\t\tconsole.error(e);\n\t\t};\n\n\t\tif (this.canvas.requestFullscreen) {\n\t\t\tthis.canvas.requestFullscreen();\n\t\t} else if (this.canvas.webkitRequestFullscreen) {\n\t\t\tthis.canvas.webkitRequestFullscreen();\n\t\t} else if (this.canvas.msRequestFullscreen) {\n\t\t\tthis.canvas.msRequestFullscreen();\n\t\t}\n\t}\n\n\tget backingStoreRatio() {\n\t\tif (!this.enableHighDPI) return 0.05;\n\n\t\treturn (\n\t\t\tthis.context.webkitBackingStorePixelRatio ||\n\t\t\tthis.context.mozBackingStorePixelRatio ||\n\t\t\tthis.context.msBackingStorePixelRatio ||\n\t\t\tthis.context.oBackingStorePixelRatio ||\n\t\t\tthis.context.backingStorePixelRatio ||\n\t\t\t1\n\t\t);\n\t}\n\n\tget devicePixelRatio() {\n\t\tif (!this.enableHighDPI) return 0.05;\n\n\t\treturn window.devicePixelRatio || 1;\n\t}\n\n\tget drawRatio() {\n\t\t// Calculate the display density pixel ratio\n\t\treturn this.devicePixelRatio / this.backingStoreRatio;\n\t}\n\n\t// eslint-disable-next-line max-statements\n\tsetSize({ width, height }) {\n\t\t// Set the canvas size\n\t\tif (this.backingStoreRatio !== this.devicePixelRatio) {\n\t\t\t// Set the virtual canvas size to the real resolution\n\t\t\tthis.canvas.width = width * this.drawRatio;\n\t\t\tthis.canvas.height = height * this.drawRatio;\n\n\t\t\t// Set the presented canvas size to the visible resolution\n\t\t\tthis.canvas.style.width = `${width}px`;\n\t\t\tthis.canvas.style.minWidth = `${width}px`;\n\t\t\tthis.canvas.style.height = `${height}px`;\n\t\t\tthis.canvas.style.minHeight = `${height}px`;\n\t\t} else {\n\t\t\t// 1:1 ratio, just scale it\n\t\t\tthis.canvas.width = width;\n\t\t\tthis.canvas.height = height;\n\n\t\t\tthis.canvas.style.width = \"\";\n\t\t\tthis.canvas.style.height = \"\";\n\t\t}\n\n\t\t// Scale the canvas according to the ratio\n\t\tthis.context.scale(this.drawRatio, this.drawRatio);\n\n\t\t// Save the virtual size of the canvas\n\t\tthis.virtualWidth = width;\n\t\tthis.virtualHeight = height;\n\t}\n\n\tclear() {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\tdrawBufferTo(x, y, ctx) {\n\t\tctx.save();\n\t\tctx.scale(1 / this.drawRatio, 1 / this.drawRatio);\n\t\tctx.drawImage(this.canvas, x * this.drawRatio, y * this.drawRatio);\n\t\tctx.restore();\n\t}\n\n\t/**\n\t * Attaches the canvas element as child to a given HTMLElement\n\t *\n\t * @param {HTMLElement} element The parent element to attach the canvas\n\t */\n\tattachToElement(element) {\n\t\telement.appendChild(this.canvas);\n\t}\n\n\tget width() {\n\t\treturn this.virtualWidth || this.canvas.width;\n\t}\n\n\tget height() {\n\t\treturn this.virtualHeight || this.canvas.height;\n\t}\n\n}\n"]}